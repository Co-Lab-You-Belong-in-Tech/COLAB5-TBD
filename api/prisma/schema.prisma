// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
   id          String      @id @default(uuid())
   givenName   String?
   familyName  String?
   displayName String?
   email       String?     @unique
   googleId    String?
   twitterId   String?
   githubId    String?
   createdAt   DateTime    @default(now())
   rooms       Room[]
   cart        Cart[]
}

model Room {
   id                String      @id @default(uuid())
   userId            String
   user              User        @relation(fields: [userId], references: [id])
   typeId            String
   type              RoomType    @relation(fields: [typeId], references: [id])
   createdAt         DateTime    @default(now())
   name              String?
   wallColor         String?
   floorColor        String?
   furniture         Furniture[]
   reccommended      RecommendedCategories[]
}

model RoomType {
   id             String   @id @default(uuid())
   name           String
   active         Boolean  @default(false)
   rooms          Room[]
   defaultImage   String?
}

model Category {
   id                String   @id @default(uuid())
   name              String
   image             String?
   rank              Int
   pricerange1       String   @default("0-49.99")
   pricerange2       String   @default("50-99.99")
   pricerange3       String   @default("100-149.99")
   pricerange4       String   @default("150-100000000")
   furniture         Furniture[]
   categorystyles    CategoryStyles[]
   recommended       RecommendedCategories[]
   relatedMaterial   RelatedMaterial[]
   recommendations   Recommendations[]
}

model RecommendedCategories {
   id             String   @id @default(uuid())
   roomId         String
   room           Room     @relation(fields: [roomId], references:[id])
   categoryId     String
   category       Category @relation(fields: [categoryId], references:[id])
}

model CategoryStyles {
   id             String   @id @default(uuid())
   categoryId     String
   category       Category @relation(fields: [categoryId], references:[id])
   tag            String
   image          String
   furniture      Furniture[]
}

model Furniture {
   id                String   @id @default(uuid())
   color             String
   categoryId        String
   category          Category @relation(fields: [categoryId], references:[id])
   roomId            String
   room              Room     @relation(fields: [roomId], references:[id])
   MaterialId        String
   material          FurnitureMaterial @relation(fields: [MaterialId], references:[id])
   CategoryStyleId   String
   categorystyle     CategoryStyles @relation(fields: [CategoryStyleId], references:[id])
}

model RelatedMaterial {
   id             String      @id @default(uuid())
   categoryId     String
   category       Category    @relation(fields: [categoryId], references: [id])
   materialId     String
   material       FurnitureMaterial @relation(fields: [materialId], references: [id])
}

model FurnitureMaterial {
   id                String   @id @default(uuid())
   name              String
   image             String?
   furniture         Furniture[]
   relatedMaterial   RelatedMaterial[]
}

model Recommendations {
   id                String   @id @default(uuid())
   categoryId        String
   category          Category @relation (fields:[categoryId], references:[id])
   searchKey         String
   results           Json
}

model Cart {
   id          String   @id @default(uuid())
   userId      String   @unique
   user        User     @relation (fields: [userId], references:[id])
   cartItems   CartItems[]
}

model CartItems {
   id             String   @id @default(uuid())
   cartId         String
   cart           Cart     @relation (fields: [cartId], references:[id])
   name           String
   rating         Float
   rating_total   Float
   price          Float
   link           String
   image          String
}