// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
   id          String   @id @default(uuid())
   givenName   String?
   familyName  String?
   displayName String?
   email       String?  @unique
   googleId    String?
   twitterId   String?
   githubId    String?
   rooms       Room[]
   cart        Cart[]
}

model Room {
   id                String      @id @default(uuid())
   userId            String
   user              User        @relation(fields: [userId], references: [id])
   typeId            String
   type              RoomType    @relation(fields: [typeId], references: [id])
   name              String?
   wallColor         String?
   floorColor        String?
   floorMaterialId   String      @default(value: "94a04072-a571-450c-bbea-68109151426f")
   flooring          Flooring    @relation(fields: [floorMaterialId], references: [id])
   furniture         Furniture[]
   cartItem          CartItems[]
}

model RoomType {
   id             String   @id @default(uuid())
   name           String
   rooms          Room[]
   defaultImage   String?
}

model Flooring {
   id       String   @id @default(uuid())
   name     String
   rooms    Room[]
}

model Category {
   id             String   @id @default(uuid())
   name           String
   furniture      Furniture[]

}

model Furniture {
   id          String   @id @default(uuid())
   color       String
   categoryId  String
   category    Category @relation(fields: [categoryId], references:[id])
   roomId      String
   room        Room     @relation(fields: [roomId], references:[id])
}

model Cart {
   id          String   @id @default(uuid())
   userId      String
   user        User     @relation (fields: [userId], references:[id])
   cartItems   CartItems[]
}

model CartItems {
   id          String   @id @default(uuid())
   cartId      String
   cart        Cart     @relation (fields: [cartId], references:[id])
   name        String
   price       Float
   link        String
   roomId      String
   room        Room     @relation (fields: [roomId], references:[id])
}